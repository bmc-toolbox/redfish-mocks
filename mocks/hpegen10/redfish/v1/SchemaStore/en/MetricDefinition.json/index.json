{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "copyright": "Copyright 2018 Hewlett Packard Enterprise Development, LP.  Portions Copyright 2014-2016 Distributed Management Task Force. All rights reserved.",
    "properties": {
        "@odata.context": {
            "$ref": "Resource.json#/definitions/odatacontext"
        },
        "@odata.etag": {
            "$ref": "Resource.json#/definitions/odataetag"
        },
        "@odata.id": {
            "$ref": "Resource.json#/definitions/odataid"
        },
        "@odata.type": {
            "$ref": "Resource.json#/definitions/odatatype"
        },
        "Description": {
            "$ref": "Resource.json#/definitions/Description"
        },
        "Id": {
            "$ref": "Resource.json#/definitions/Id"
        },
        "Name": {
            "$ref": "Resource.json#/definitions/Name"
        },
        "Calculable": {
            "description": "The types of calculations which can be applied to the metric reading.  This property provides information to the client on the suitability of calculatiion using the metric reading.",
            "enum": [
                "NonCalculatable",
                "Summable",
                "NonSummable"
            ],
            "enumDescriptions": {
                "NonCalculatable": "No calculations should be performed on the metric reading.",
                "NonSummable": "The sum of the metric reading across multiple instances is not meaningful.",
                "Summable": "The sum of the metric reading across multiple instances is meaningful."
            },
            "longDescription": "The value shall indicate the types of calculations which can applied to the metric reading.",
            "type": "string"
        },
        "CalculationAlgorithm": {
            "description": "The calculation which is performed on a source metric to obtain the metric being defined.",
            "enum": [
                "Average",
                "Maximum",
                "Minimum"
            ],
            "enumDescriptions": {
                "Average": "The metric is calculated as the average of a metric reading over a sliding time interval.",
                "Maximum": "The metric is calculated as the maximum value of a metric reading over during a time interval.",
                "Minimum": "The metric is calculated as the minimum value of a metric reading over a sliding time interval."
            },
            "enumLongDescriptions": {
                "Average": "The metric shall be calculated as the average of a metric reading over a sliding time interval.  The time interval shall be the value of the CalculationTimeInterval property.",
                "Maximum": "The metric shall be calculated as the maximum of a metric reading over a sliding time interval.  The time interval shall be the value of the CalculationTimeInterval property.",
                "Minimum": "The metric shall be calculated as the minimum of a metric reading over a sliding time interval.  The time interval shall be the value of the CalculationTimeInterval property."
            },
            "longDescription": "The value of this property shall specify the calculation performed to obtain the metric.",
            "type": "string"
        },
        "MetricDataType": {
            "description": "The data type of the related metric values.  The property provides information to the client on the nature of the metric reading.",
            "enum": [
                "Boolean",
                "DateTime",
                "Decimal",
                "Integer",
                "String",
                "Enumeration"
            ],
            "enumDescriptions": {
                "Boolean": "The data type follows the JSON Boolean definition.",
                "DateTime": "The data type follows the JSON String definition with the Date-Time format applied.",
                "Decimal": "The data type follows the JSON Decimal definition.",
                "Enumeration": "The data type follows the JSON String definition with a set of enumerations defined.",
                "Integer": "The data type follows the JSON Integer definition.",
                "String": "The data type follows the JSON String definition."
            },
            "longDescription": "The value shall be the data type of the related metric values as defined by JSON data types.",
            "type": "string"
        },
        "Implementation": {
            "description": "The implementation of the metric.",
            "enum": [
                "PhysicalSensor",
                "Calculated",
                "Synthesized",
                "DigitalMeter"
            ],
            "enumDescriptions": {
                "Calculated": "The metric is implemented by applying a calculation on another metric property.  The calculation is specified in the CalculationAlgorithm property.",
                "DigitalMeter": "The metric is implemented as digital meter.",
                "PhysicalSensor": "The metric is implemented as a physical sensor.",
                "Synthesized": "The metric is implemented by applying a calculation on one or more metric properties.  (The calculation is not specified.  For expressing generalized formula, see MathSON)."
            },
            "longDescription": "The value shall specify the implementation of the metric.",
            "readonly": true,
            "type": "string"
        },
        "IsLinear": {
            "description": "Indicates whether the metric values are linear (vs non-linear).",
            "longDescription": "The value shall specify that the corresponding metric values shall be linear or non-linear.  Linear metrics may be compared using a greater than relation.  An example of linear metrics include performance metrics.  Examples of non-linear metrics include error codes.",
            "readonly": false,
            "type": [
                "boolean",
                "null"
            ]
        },
        "MaxReadingRange": {
            "description": "Maximum value for metric reading.",
            "longDescription": "The value shall indicate the highest possible value for a related MetricValue.  The value shall have the units specified in the property Units.  The property is not meaningful, when the MetricType property has the value 'Discrete'.",
            "readonly": true,
            "type": [
                "number",
                "null"
            ]
        },
        "MetricProperties": {
            "description": "A collection of URI for the properties on which this metric definition is defined.",
            "format": "uri",
            "items": {
                "type": [
                    "string",
                    "null"
                ]
            },
            "longDescription": "Each value may contain one or more Wildcard names enclosed in curly braces.  Wildcard value entries shall be substituted for each Wildcard name found.  If two or more wild names are found, the same Wildcard index is used for each in one substitution pass.  After substituting the WildCard values entries, each value shall be a URI for a property in a resource that matches a property declaration in the corresponding MetricDefinition.",
            "readonly": false,
            "type": "array"
        },
        "MetricType": {
            "description": "Specifies the type of metric provided.  The property provides information to the client on how the metric can be handled.",
            "enum": [
                "Numeric",
                "Discrete",
                "Gauge",
                "Counter",
                "Countdown"
            ],
            "enumDescriptions": {
                "Countdown": "The metric is a countdown metric.  The metric reading is a non-negative integer which decreases monotonically.  When a counter reaches its minimum, the value resets to preset value and resumes counting down.",
                "Counter": "The metric is a counter metric.  The metric reading is a non-negative integer which increases monotonically.  When a counter reaches its maximum, the value resets to 0 and resumes counting.",
                "Discrete": "The metric is a discrete metric.  The metric value is discrete.  The possible values are listed in the DiscreteValues property.",
                "Gauge": "The metric is a gauge metric.  The metric value is a real number.  When the metric value reaches the gauges extrema, it stays at that value, until the reading falls within the extrema.",
                "Numeric": "The metric is a numeric metric.  The metric value is any real number."
            },
            "enumLongDescriptions": {
                "Discrete": "The metric values shall indicate discrete states."
            },
            "longDescription": "The value of this property shall specify the type of metric.",
            "type": "string"
        },
        "MinReadingRange": {
            "description": "Minimum value for metric reading.",
            "longDescription": "The value shall be the lowest possible value for the metric reading.  The value shall have the units specified in the property Units.  The property is not meaningful, when the MetricType property has the value 'Discrete'.",
            "readonly": true,
            "type": [
                "number",
                "null"
            ]
        },
        "Units": {
            "description": "The units of measure for this metric.",
            "longDescription": "The value shall specify the units of the metric. shall be consistent with the case sensitive Unified Code for Units of Measure as defined at http://unitsofmeasure.org/ucum.html.  Note: the units of measure is not covered in UCUM.",
            "readonly": false,
            "type": [
                "string",
                "null"
            ]
        }
    },
    "required": [
        "Id",
        "Name"
    ],
    "type": "object",
    "readonly": true,
    "title": "#MetricDefinition.v1_0_0.MetricDefinition"
}