{
    "$ref": "#/definitions/DellSoftwareInstallationService",
    "$schema": "/redfish/v1/Schemas/redfish-schema.v1_1_0.json",
    "copyright": "Copyright 2016 Dell, Inc. or its subsidiaries.  All Rights Reserved.",
    "definitions": {
        "Actions": {
            "additionalProperties": false,
            "description": "The available actions for this resource.",
            "longDescription": "This type shall contain the available actions for this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "#DellSoftwareInstallationService.GetRepoBasedUpdateList": {
                    "$ref": "#/definitions/GetRepoBasedUpdateList"
                },
                "#DellSoftwareInstallationService.InstallFromRepository": {
                    "$ref": "#/definitions/InstallFromRepository"
                },
                "#DellSoftwareInstallationService.InstallFromURI": {
                    "$ref": "#/definitions/InstallFromURI"
                }
            },
            "type": "object"
        },
        "ApplyUpdate": {
            "enum": [
                "False",
                "True"
            ],
            "enumDescriptions": {
                "False": "False",
                "True": "True"
            },
            "type": "string"
        },
        "DellSoftwareInstallationService": {
            "additionalProperties": false,
            "description": "The DellSoftwareInstallationService resource provides some actions to support software installation functionality.",
            "longDescription": "The DellSoftwareInstallationService resource provides some actions to support software installation functionality.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "/redfish/v1/Schemas/odata.4.0.0.json#/definitions/context"
                },
                "@odata.id": {
                    "$ref": "/redfish/v1/Schemas/odata.4.0.0.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "/redfish/v1/Schemas/odata.4.0.0.json#/definitions/type"
                },
                "Actions": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Actions"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The available actions for this resource.",
                    "longDescription": "The Actions property shall contain the available actions for this resource."
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "readonly": true
                },
                "Id": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Name": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Oem",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*."
                }
            },
            "required": [
                "Id",
                "Name"
            ],
            "type": "object"
        },
        "GetRepoBasedUpdateList": {
            "additionalProperties": false,
            "description": "This method is used for getting the list of packages and a list of devices that will be updated when a particular repository is used. You must run InstallFromRespository command before running GetRepoBasedUpdateList(). If Applyupdate is False, no updates are applied or scheduled. If ApplyUpdate is True, the list contains job IDs for all the jobs queued for the devices.",
            "longDescription": "This method is used for getting the list of packages and a list of devices that will be updated when a particular repository is used. You must run InstallFromRespository command before running GetRepoBasedUpdateList(). If Applyupdate is False, no updates are applied or scheduled. If ApplyUpdate is True, the list contains job IDs for all the jobs queued for the devices.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IgnoreCertWarning": {
            "enum": [
                "Off",
                "On"
            ],
            "enumDescriptions": {
                "Off": "Off",
                "On": "On"
            },
            "type": "string"
        },
        "InstallFromRepository": {
            "additionalProperties": false,
            "description": "This method creates the list of the updates contained in the repository that are supported by LC and are applicable to the system and installed hardware. The successful execution of this method creates a job. The list is copied to a persistent location so that you can query for the updatable list by using GetRepoBasedUpdateList WSMan Command. If the input parameter ApplyUpdate value is True, only the applicable packages are applied and GetRepoBasedUpdateList gives the JOBIDs for all the jobs queued for the devices.",
            "longDescription": "This method creates the list of the updates contained in the repository that are supported by LC and are applicable to the system and installed hardware. The successful execution of this method creates a job. The list is copied to a persistent location so that you can query for the updatable list by using GetRepoBasedUpdateList WSMan Command. If the input parameter ApplyUpdate value is True, only the applicable packages are applied and GetRepoBasedUpdateList gives the JOBIDs for all the jobs queued for the devices.",
            "parameters": {
                "ApplyUpdate": {
                    "$ref": "#/definitions/ApplyUpdate",
                    "description": "If ApplyUpdate is set to True, the updatable packages from Catalog XML are staged. If it is set to False, no updates are applied. The list of updatable packages can be seen by invoking the GetRepoBasedUpdateList. Default value is True.",
                    "longDescription": "If ApplyUpdate is set to True, the updatable packages from Catalog XML are staged. If it is set to False, no updates are applied. The list of updatable packages can be seen by invoking the GetRepoBasedUpdateList. Default value is True."
                },
                "CatalogFile": {
                    "description": "Name of the catalog file on the repository. Default is Catalog.xml.",
                    "longDescription": "Name of the catalog file on the repository. Default is Catalog.xml.",
                    "type": "string"
                },
                "IPAddress": {
                    "description": "IP address for the remote share. If ShareType is FTP, default value is ftp.dell.com",
                    "longDescription": "IP address for the remote share. If ShareType is FTP, default value is ftp.dell.com",
                    "type": "string"
                },
                "IgnoreCertWarning": {
                    "$ref": "#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is used. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is used. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "Mountpoint": {
                    "description": "The local directory where the share should be mounted. This is applicable for CIFS.",
                    "longDescription": "The local directory where the share should be mounted. This is applicable for CIFS.",
                    "type": "string"
                },
                "Password": {
                    "description": "Password for the remote share. This parameter must be provided for CIFS.",
                    "longDescription": "Password for the remote share. This parameter must be provided for CIFS.",
                    "type": "string"
                },
                "ProxyPasswd": {
                    "description": "The password for the proxy server.",
                    "longDescription": "The password for the proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "number"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "#/definitions/ProxySupport",
                    "description": "Specifies if a proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if a proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "#/definitions/ProxyType",
                    "description": "The proxy type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The proxy type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "RebootNeeded": {
                    "description": "This property indicates if a reboot should be performed. True indicates that the system (host) is rebooted during the update process. False indicates that the updates take effect after the system is rebooted the next time. Default value is set to False.",
                    "longDescription": "This property indicates if a reboot should be performed. True indicates that the system (host) is rebooted during the update process. False indicates that the updates take effect after the system is rebooted the next time. Default value is set to False.",
                    "type": "boolean"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "#/definitions/ShareType",
                    "description": "Type of the Network Share. Default value is NFS.",
                    "longDescription": "Type of the Network Share. Default value is NFS."
                },
                "UserName": {
                    "description": "User name for the remote share. This parameter must be provided for CIFS.",
                    "longDescription": "User name for the remote share. This parameter must be provided for CIFS.",
                    "type": "string"
                },
                "Workgroup": {
                    "description": "Workgroup for the CIFS share - optional.",
                    "longDescription": "Workgroup for the CIFS share - optional.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InstallFromURI": {
            "additionalProperties": false,
            "description": "InstallFromURI method is used for creating a job for update service. The successful execution of this method creates a job.",
            "longDescription": "InstallFromURI method is used for creating a job for update service. The successful execution of this method creates a job.",
            "parameters": {
                "IgnoreCertWarning": {
                    "$ref": "#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is used. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is used. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "ProxyPasswd": {
                    "description": "The password for the proxy server.",
                    "longDescription": "The password for the proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "string"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "#/definitions/ProxySupport",
                    "description": "Specifies if a proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if a proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "#/definitions/ProxyType",
                    "description": "The type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "TargetResource": {
                    "description": "A Link to the DellSoftwareInventory resource whose firmware needs to be updated. It shall be the @odata.id of the DellSoftwareInventory Resource.",
                    "longDescription": "A Link to the DellSoftwareInventory resource whose firmware needs to be updated. It shall be the @odata.id of the DellSoftwareInventory Resource.",
                    "type": "string"
                },
                "URI": {
                    "description": "Network file location of the firmware to be installed. Supported network share types are HTTP, HTTPS, CIFS, NFS, TFTP and FTP. Special characters must be encoded in URI format.",
                    "longDescription": "Network file location of the firmware to be installed. Supported network share types are HTTP, HTTPS, CIFS, NFS, TFTP and FTP. Special characters must be encoded in URI format.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProxySupport": {
            "enum": [
                "DefaultProxy",
                "Off",
                "ParametersProxy"
            ],
            "enumDescriptions": {
                "DefaultProxy": "On - use default proxy settings",
                "Off": "Off",
                "ParametersProxy": "On - use passed in parameters for proxy"
            },
            "type": "string"
        },
        "ProxyType": {
            "enum": [
                "HTTP",
                "SOCKS"
            ],
            "enumDescriptions": {
                "HTTP": "HTTP",
                "SOCKS": "SOCKS"
            },
            "type": "string"
        },
        "ShareType": {
            "enum": [
                "CIFS",
                "FTP",
                "HTTP",
                "HTTPS",
                "NFS",
                "TFTP"
            ],
            "enumDescriptions": {
                "CIFS": "CIFS",
                "FTP": "FTP",
                "HTTP": "HTTP",
                "HTTPS": "HTTPS",
                "NFS": "NFS",
                "TFTP": "TFTP"
            },
            "type": "string"
        }
    },
    "title": "#DellSoftwareInstallationService.v1_0_0.DellSoftwareInstallationService"
}